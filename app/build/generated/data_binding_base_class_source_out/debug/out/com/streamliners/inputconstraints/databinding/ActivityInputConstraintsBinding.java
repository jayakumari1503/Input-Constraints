// Generated by view binder compiler. Do not edit!
package com.streamliners.inputconstraints.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.streamliners.inputconstraints.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityInputConstraintsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonInput;

  @NonNull
  public final CheckBox digitsCheckBox;

  @NonNull
  public final TextView heading;

  @NonNull
  public final CheckBox lowerCaseAlphabetCheckBox;

  @NonNull
  public final CheckBox mathematicalOperationCheckBox;

  @NonNull
  public final CheckBox otherSymbolCheckBox;

  @NonNull
  public final TextView result;

  @NonNull
  public final CheckBox upperCaseAlphabetCheckBox;

  private ActivityInputConstraintsBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonInput, @NonNull CheckBox digitsCheckBox, @NonNull TextView heading,
      @NonNull CheckBox lowerCaseAlphabetCheckBox, @NonNull CheckBox mathematicalOperationCheckBox,
      @NonNull CheckBox otherSymbolCheckBox, @NonNull TextView result,
      @NonNull CheckBox upperCaseAlphabetCheckBox) {
    this.rootView = rootView;
    this.buttonInput = buttonInput;
    this.digitsCheckBox = digitsCheckBox;
    this.heading = heading;
    this.lowerCaseAlphabetCheckBox = lowerCaseAlphabetCheckBox;
    this.mathematicalOperationCheckBox = mathematicalOperationCheckBox;
    this.otherSymbolCheckBox = otherSymbolCheckBox;
    this.result = result;
    this.upperCaseAlphabetCheckBox = upperCaseAlphabetCheckBox;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityInputConstraintsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityInputConstraintsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_input_constraints, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityInputConstraintsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_input;
      Button buttonInput = rootView.findViewById(id);
      if (buttonInput == null) {
        break missingId;
      }

      id = R.id.digits_check_box;
      CheckBox digitsCheckBox = rootView.findViewById(id);
      if (digitsCheckBox == null) {
        break missingId;
      }

      id = R.id.heading;
      TextView heading = rootView.findViewById(id);
      if (heading == null) {
        break missingId;
      }

      id = R.id.lowerCase_alphabet_check_box;
      CheckBox lowerCaseAlphabetCheckBox = rootView.findViewById(id);
      if (lowerCaseAlphabetCheckBox == null) {
        break missingId;
      }

      id = R.id.mathematical_operation_check_box;
      CheckBox mathematicalOperationCheckBox = rootView.findViewById(id);
      if (mathematicalOperationCheckBox == null) {
        break missingId;
      }

      id = R.id.other_symbol_check_box;
      CheckBox otherSymbolCheckBox = rootView.findViewById(id);
      if (otherSymbolCheckBox == null) {
        break missingId;
      }

      id = R.id.result;
      TextView result = rootView.findViewById(id);
      if (result == null) {
        break missingId;
      }

      id = R.id.upperCase_alphabet_check_box;
      CheckBox upperCaseAlphabetCheckBox = rootView.findViewById(id);
      if (upperCaseAlphabetCheckBox == null) {
        break missingId;
      }

      return new ActivityInputConstraintsBinding((ConstraintLayout) rootView, buttonInput,
          digitsCheckBox, heading, lowerCaseAlphabetCheckBox, mathematicalOperationCheckBox,
          otherSymbolCheckBox, result, upperCaseAlphabetCheckBox);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
